#include <iostream>
#include "Player.h"

Player::Player (std::vector <Card> cards, Table& table) : hand_(cards), currentTable_(&table) {
}

void Player::printHand() {
    
    for (int i = 0; (unsigned)i < hand_.size(); i++) {
        std::cout<<" "<<hand_[i];
    }
    std::cout<<std::endl;
}

std::vector<Card> Player::getPlayableCards () {
    std::vector<Card> playableCards;
    for (int i = 0; (unsigned)i < hand_.size(); i++) {
        if (currentTable_->isLegalCard(hand_[i])) {
            playableCards.push_back(hand_[i]);
        }
    }
    return playableCards;
}

void Player::removeCardInHand (Card c) {
    for (int i = 0; (unsigned)i < hand_.size(); i++) {
        if (hand_[i] == c) {
            hand_.erase(hand_.begin() + i);
        }
    }
}

bool Player::discardCard (Card c, std::vector<Card> playableCards) {
    if (playableCards.size() != 0) {
        return false;
    }
    
    for (int i = 0; (unsigned)i < hand_.size(); i++) {
        if (c == hand_[i]) {
            discarded_.push_back(c);    
            removeCardInHand( c ); 
            return true;
        }
    }
    return false;
}
